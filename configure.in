dnl configure
dnl Fichero de configuracion del pryecto clauer-linux
dnl solo falta encontrar el directorio de openssl ;-)
AC_INIT()  
AM_INIT_AUTOMAKE(ClauerLinux,3.0.8)
AC_PROG_CXX
dnl AC_ISC_POSIX
AM_PROG_LIBTOOL
dnl AC_STDC_HEADERS
AC_PROG_RANLIB
AC_PROG_INSTALL
AC_LANG_CPLUSPLUS
PACKAGE=ClauerLinux
VERSION=3.0.8
MSGS=""

dnl ***************************************************
dnl Comprobaci√≥n de donde esta instalado OpenSSL
dnl adaptado directamente del configure.in de curl-ssl
dnl ***************************************************

dnl The include files 
dnl Defaultnclude files
dnl Default path
dnl Default library path

dnl check if --enable-64 is set
LIB_PATH="/usr/lib"
IN=no
AC_ARG_ENABLE(64,dnl
[  --enable-64    Enable compilation setup for 64 bit machines
],
LIB_PATH="/usr/lib64"
CPPFLAGS=-DIAx86_64
)


dnl check if --enable-32bit-emulation is set
AC_ARG_ENABLE(32bit-emulation,dnl
[  --enable-32bit-emulation    Compile to a 32 bit target on an intel  X86_64 platform 
],
IN=yes
)


if test X"$IN" = Xyes
then
LIB_PATH="/usr/lib/"
CPPFLAGS="-m32"
LDFLAGS="-m32 -Wl,-melf_i386" 
fi

AC_MSG_RESULT($build)

case "$build" in
  powerpc-apple-* )
	    CPPFLAGS="$CPPFLAGS -DMAC"
            MSGS=" 
  ------------------------------------ READ THIS ----------------------------------

  It  seems  like  you  are  compiling Clauer software on a Mac with a Power PC 
  processor there is no official support for Mac with such a kind of processor,
  just Mac-Intel version will be supported in short.

  If you want to go on with the compilation be aware that only the clauers that you
  build under Mac with mkfscrypto and climport will work properly and them will not 
  be usable on an Intel Systems.

  ----------------------------------------------------------------------------------
  "  ;;
    
    
  i686-apple-* | i386-apple-*)
    CPPFLAGS="$CPPFLAGS -DMAC"
    MSGS=" 
  ------------------------------------ READ THIS ----------------------------------

  It  seems  like  you  are  compiling Clauer software on a Mac with an Intel 
  processor there is no official support for Mac but it has been tested and
  should work properly.

  Please if this software does not configure or compile properly send and e-mail 
  with the error output produced by configure or make to santapau@sg.uji.es.

  ----------------------------------------------------------------------------------
  "  ;;



  x86_64-*-* | IA84-*-* ) 
	    MSGS="
  ------------------------------------ READ THIS ----------------------------------

  It seems like you are compiling Clauer software on an 64 bit architecture, you 
  have to set the flag --enable-64 for compiling on this architecture.
		 
  NOTE: On some Linux distributions, Firefox is compiled by default for 32 bit
        because  of  some plugin unavaliability on 64 bit, this will make that 
        you can not use the pkcs11 module compiled for 64 bit with this method
        you should recompile it with 32 bit simulation.

  ----------------------------------------------------------------------------------
  "  ;;
		
 i686-pc-linux-gnu )
	     MSGS="";;
		    
esac


SSL_INCLUDE_PATH="/usr/include/openssl"
AC_ARG_WITH(ssl-include,dnl
[  --with-ssl-include= DIR    Where to look for SSL include files
                              DIR defaults  to "/usr/include/openssl"],
SSL_INCLUDE_PATH=$withval
)

if test X"$SSL-INCLUDE_PATH" = Xno
then
AC_CHECKING(WARNING: We should need to indicate where is openssl installed)
else
AC_MSG_CHECKING(where to look for OpenSSL)
CPPFLAGS="$CPPFLAGS -I$SSL_PATH/include"
INC_SSLPATH="$SSL_INCLUDE_PATH"
AC_MSG_RESULT($SSL_INCLUDE_PATH)
INC_SSLPATH="-I$SSL_INCLUDE_PATH"
fi

dnl the libraries files path
dnl default libraries path
SSL_LIBRARIES_PATH=$LIB_PATH 
AC_ARG_WITH(ssl-libraries,dnl 
[  --with-ssl-libraries= DIR    Where to look for SSL Libraries files
 			      DIR defaults to "/usr/lib" 
],     
SSL_LIBRARIES_PATH=$withval
)

if test X"$SSL_LIBRARIES_PATH" = Xno
then
AC_MSG_CHECKING(WARNING: We should need to indicate where is openssl installed)
else
	
AC_MSG_CHECKING(where to look for OpenSSL)
    CPPFLAGS="$CPPFLAGS -L$SSL_LIBRARIES_PATH" 
LIB_SSLPATH="$SSL_LIBRARIES_PATH" 

AC_MSG_RESULT($SSL_LIBRARIES_PATH)
LIB_SSLPATH="-L$SSL_LIBRARIES_PATH"
fi


dnl pthreads existence 
PTHREAD_LIBRARY_PATH=$LIB_PATH 
AC_ARG_WITH(pthread-library,dnl 
[  --with-pthread-library= DIR    Where to look for pthread Library files
 			          DIR defaults to "/usr/lib" 
],     
PTHREAD_LIBRARY_PATH=$withval
)

if test X"$PTHREAD_LIBRARY_PATH" = Xno
then
AC_MSG_CHECKING(WARNING: We should need to indicate where is pthread library installed)
else
AC_MSG_CHECKING(where to look for pthread )
CPPFLAGS="$CPPFLAGS -L$PTHREAD_LIBRARY_PATH";
AC_MSG_RESULT($PTHREAD_LIBRARY_PATH)
fi

dnl End of pthreads checking


dnl Check if we can found the needed ssl and pthread include
dnl and libreries.

LDFLAGS="$LDFLAGS $LIB_SSLPATH -L$PTHREAD_LIBRARY_PATH -L$LIB_PATH";
AC_CHECK_LIB(pthread,pthread_create,,
AC_MSG_WARN([We can't links against the pthread library])
AC_MSG_ERROR([Perhaps you need to use the --with-pthread-library directive])
) 


AC_CHECK_LIB(crypto,RSA_sign,,
AC_MSG_WARN([We can't links against the ssl library])
AC_MSG_ERROR([Perhaps you need to use the --with-ssl-libraries directive])
) 

AC_MSG_RESULT($CPPFLAGS)

CPPFLAGS="$CPPFLAGS $INC_SSLPATH" 

AC_MSG_RESULT($CPPFLAGS)

dnl ********************************************************
dnl             Check for openssl headers 
dnl ********************************************************

OPENSSL_HEADERS="0"

AC_CHECK_HEADERS(openssl/x509.h openssl/rsa.h openssl/asn1.h,
		    OPENSSL_HEADERS="1"
		    CPPFLAGS="$CPPFLAGS -I$SSL_INCLUDE_PATH/openssl/"
)

AC_CHECK_HEADERS(x509.h rsa.h asn1.h,
		    OPENSSL_HEADERS="1"
)

if test X"$OPENSSL_HEADERS" = X"0"; then
    AC_MSG_WARN([Can't find ssl headers])
    AC_MSG_ERROR([You must specify where to look with --with-ssl-include])
fi 


AC_SUBST(LIB_SSLPATH,LIB_SSLPATH)
AC_SUBST(INC_SSLPATH,INC_SSLPATH)

AC_OUTPUT([Makefile clio/Makefile CRYPTOWrapper/Makefile LIBRT/Makefile  LIBIMPORT/Makefile clos/Makefile clauer-utils/Makefile pkcs11/Makefile])

if test \! X"$MSGS" = X""; then
    AC_MSG_WARN([$MSGS])
fi

